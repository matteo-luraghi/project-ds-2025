@startuml

enum ServerRole {
  LEADER
  FOLLOWER
  CANDIDATE
}

enum OperationType {
  READ
  WRITE
}

class Server {
  -id: int
  -serverSocket: Socket
  -clientSocketList: List<Socket>
  -role: ServerRole
  -port: int
  -recentLog: Queue<Log>
  +sendResponse(Socket clientSocket)
}

class ServerLeader {
  +followers: List<Server>
  +notifyFollowers(AppendLogMessage message)
  +notifyFollowers(CommitMessage message)
  +appendLog(Log log)
  +commit(Log log)
  +sendRespone(Server server)
}

class ServerFollower {
  +leader: Server
  +sendACK()
  +sendWriteRequest(Server leader)
}

class ServerCandidate {
}

class Client {
  -id: int
  -clientSocket: Socket
  +read(int key)
  +write(int key, byte[] value)
}

class Log {
  -timestamp: TimeStamp
  -term: int
  -operationType: OperationType
  -operationKey: int
  -operationData: byte[]
}

class Tuple{
  -key: int
  -value: byte[]
}

@enduml
